import SwiftUI
import UserNotifications

struct ActivityDetailModal: View {

    var body: some View {
        NavigationView {
            List {
                // Name Section
                Section {
                    TextField("Activity Name", text: $newName)
                } header: {
                    Text("Activity Details")
                }

                // Counter Section
                Section {
                    HStack(spacing: 20) {
                        Button(action: {
                            if newCount > 0 {
                                newCount -= 1
                            }
                        }) {
                            Label("Decrease", systemImage: "minus.circle.fill")
                                .font(.title2)
                                .foregroundColor(.accentColor)
                        }
                        .frame(width: 60, height: 44)

                        Text("\(newCount)")
                            .font(.system(size: 48, weight: .bold))
                            .monospacedDigit()
                            .frame(maxWidth: .infinity)

                        Button(action: {
                            newCount += 1
                        }) {
                            Label("Increase", systemImage: "plus.circle.fill")
                                .font(.title2)
                                .foregroundColor(.accentColor)
                        }
                        .frame(width: 60, height: 44)
                    }
                    .labelStyle(.iconOnly)

                    HStack {
                        Text("Last counted")
                            .foregroundColor(.secondary)
                        Spacer()
                        Text(lastCountedDate, style: .date)
                    }
                    .font(.subheadline)
                } header: {
                    Text("Counter")
                }

                // Settings Section
                Section {
                    Toggle("Reset Count Daily", isOn: $newResetDaily)
                } header: {
                    Text("Settings")
                }

                // Activity History Section
                Section {
                    if activity.history.isEmpty {
                        Text("No history recorded yet")
                            .foregroundColor(.secondary)
                    } else {
                        ForEach(activity.history, id: \.date) { entry in
                            HStack {
                                Text(entry.date, style: .date)
                                Spacer()
                                Text("Count: \(entry.count)")
                                    .bold()
                            }
                            .font(.subheadline)
                        }
                    }
                } header: {
                    Text("Activity History")
                }

                // Notifications Section
                Section {
                    ForEach(notificationTimes.indices, id: \.self) { index in
                        HStack {
                            DatePicker(
                                "Time",
                                selection: Binding(
                                    get: { Calendar.current.date(from: notificationTimes[index]) ?? Date() },
                                    set: { newDate in
                                        notificationTimes[index] = Calendar.current.dateComponents([.hour, .minute], from: newDate)
                                    }
                                ),
                                displayedComponents: .hourAndMinute
                            )

                            Button(action: { notificationTimes.remove(at: index) }) {
                                Image(systemName: "minus.circle.fill")
                                    .foregroundColor(.red)
                            }
                        }
                    }

                    Button(action: {
                        notificationTimes.append(Calendar.current.dateComponents([.hour, .minute], from: Date()))
                    }) {
                        HStack {
                            Image(systemName: "plus.circle.fill")
                            Text("Add Notification Time")
                        }
                    }
                } header: {
                    Text("Daily Notifications")
                }

                // Reset Button Section
                Section {
                    Button(role: .destructive) {
                        newCount = 0
                    } label: {
                        Text("Reset Count")
                            .frame(maxWidth: .infinity)
                    }
                }
            }
        }
        .navigationTitle("Edit Activity")
        .navigationBarTitleDisplayMode(.inline)
        .toolbar {
            ToolbarItem(placement: .primaryAction) {
                Button("Cancel") {
                    dismiss()
                }
            }
            ToolbarItem(placement: .navigationBarTrailing) {
                Button("Save") {
                    saveChanges()
                }
            }
        }
        .onAppear {
        }
    }

}

